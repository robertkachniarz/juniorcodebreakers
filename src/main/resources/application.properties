# ===============================
# TOMCAT
# ===============================
server.address=127.0.0.1
server.port=8080
server.error.whitelabel.enabled=false
server.tomcat.accesslog.enabled=true

# ===============================
# SMTP EMAIL
# ===============================

spring.mail.host = smtp.gmail.com
spring.mail.username =citybikerentalsda@gmail.com
spring.mail.password=CityBikeRentalSDA
spring.mail.port = 587
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.starttls.enable = true


# ===============================
# = LOGGING
# ===============================
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR

# ===============================
# = DATA SOURCE
# ===============================

# Utwórz w MySQL pustą bazę CityBikeRental

spring.datasource.url = jdbc:mysql://localhost:3306/CityBikeRental?useSSL=true
#spring.datasource.url=jdbc:h2:file:~/test
spring.datasource.username = robertk
spring.datasource.password = Test#2018
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.platform=h2

#spring.h2.console.enabled=true
#spring.h2.console.path=/h2




# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update

# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false


# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, enabled from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?

# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always